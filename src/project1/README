README for project1, socket programming application
--------------------------------------------------------------------------------------

Student Details :

Name 			: Ravali Kandur
Student ID 		: 5084769
Email			: kandu009@umn.edu

Index
-------------------------------------------------------------------------------------
1. Files
2. Assumptions/Prerequisites
3. How to Run

1. Files
-------------------------------------------------------------------------------------

1.1. Client (client)
-----------------------
- client_main.cxx 			: code for the core client and user interface for all the actions
- client.h, client.cxx 		: Client class which has all the implementation details of the client which is used in client_main.cxx
- client.cfg				: file which holds the config information of the client i.e., udp_probe_server, udp_server_port

1.2. Content Server (server)
-----------------------
- server_main.cxx			: code for the core server and user interface for all the actions
- content_server.cfg		: file which holds the config information of the server i.e., its tcpport, udpport, files that can be downloaded
- helper.h					: Class with helper methods for content and credential server
- server.h, server.cxx		: Server class which has all the implementation of content server which is used as an object in server_main.cxx
- socket.h, socket.cxx		: Socket class which has all the methods and implementation related to sockets. Can be used in all client, server, etc

1.3. Credential Server (credentailserver)
-----------------------
- credential_main.cxx		: code for the core credential server interface for all the actions
- credential.cfg			: file which holds the config information of the credential server i.e, port on which it should run, 
							  list of content servers, host and ip address on which they should run, their files available for download
- credential_server.h, 		: Credential Server class which has all the methods and implementation related to 
  credential_server.cxx		  credential server handling which is used in credential_main.cxx

1.4. Utilties (utilities)
------------------------
- common.h 					: consists of methods which are generic to all clients, servers. Not logical methods but the functional methods. 
							  Eg: tokenize a string method

1.5. Others
------------------------
- Makefile					: makefile to generate all the necessary binary executables of servers, clients
- README					: brief note on what are the components of project and how to run different modules.

2. Assumptions
--------------------------------------------------------------------------------------

- Configuration and login related files and the files to be downloaded like login.dat, credential.cfg, client.cfg, etc., 
  should be copied to '/tmp/' directory before running the application
- If you do not want to use the default machines mentioned in config file to test, you need to edit them before running the application
- It is assumed that all the content servers allow same files for download
- It is assumed that all the content servers are running on the machines mentioned in credential.cfg file
- In case of UDP file transfer, the client should be ready with the UDP receiver which accepts rge file sent from the server's UDP sender.
- The additional error codes ERR_408 to ERR_415 are only for this application. They might clash with any of the standard error codes.
- The ports (55550 or above) are assumed to be available. If they are not, corresponding config files should be updated.
- server expects client to send the UDP server and port information along with the get request, in case if the client wants a file download using UDP

3. How to Run
-----------------------------------------------------------------------
1. Run Content Server 		: If you do not want to use the default ports(in content server config file) and host names(in credential server config) 
							  mentioned in config file, edit them. Also, modify if needed, the files allowed to download from content server
							  Go to the project1 directory, then run 
					  g++ ./credentialserver/credential_main.cxx ./credentialserver/src/credential_server.cxx ./server/src/server.cxx ./server/src/socket.cxx -lpthread -o bcredential

2. Run Credential Server	: If you do not want to use the default hostnames, ports for the content servers, files available for 
							  download with content servers, make sure you modify them.
							  Also, if you do not want to run credential server on the default port (55555), modify in the credential.cfg file
							  Go to the project1 directory, then run
							  g++ ./server/server_main.cxx ./server/src/server.cxx ./server/src/socket.cxx ./client/src/client.cxx -lpthread -o bcontent

3. Run Client				: log on to any machine, go to the project1 dectory, then run 
							  g++ ./client/client_main.cxx ./client/src/client.cxx ./server/src/server.cxx ./server/src/socket.cxx -o bclient

---------------------------------------------------------------------------------------------
